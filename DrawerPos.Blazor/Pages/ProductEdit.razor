@page "/products/edit/{id:int}"

@inject ProductService ProductService
@inject NavigationManager Navigation

<h3>Edit Product</h3>

@if (product == null || categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="product" OnValidSubmit="HandleValidSubmit" class="max-w-md mx-auto">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <h2 class="text-base font-semibold leading-7 text-gray-900">Create Product</h2>
        <p class="mt-1 text-sm leading-6 text-gray-600">ระบุข้อมูลสินค้าให้ครบถ้วน</p>
        <div class="col-span-full">
            <div class="mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 p-6">
                <div class="text-center">
                    @if (!string.IsNullOrEmpty(product.Image))
                    {
                        <img src="@($"data:image/png;base64,{product.Image}")" class="img-fluid mb-3 mx-auto h-14 w-14" alt="Product Image" />
                    }
                    else
                    {
                        <svg class="mx-auto h-12 w-12 text-gray-300" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M1.5 6a2.25 2.25 0 012.25-2.25h16.5A2.25 2.25 0 0122.5 6v12a2.25 2.25 0 01-2.25 2.25H3.75A2.25 2.25 0 011.5 18V6zM3 16.06V18c0 .414.336.75.75.75h16.5A.75.75 0 0021 18v-1.94l-2.69-2.689a1.5 1.5 0 00-2.12 0l-.88.879.97.97a.75.75 0 11-1.06 1.06l-5.16-5.159a1.5 1.5 0 00-2.12 0L3 16.061zm10.125-7.81a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0z" clip-rule="evenodd" />
                        </svg>
                    }
                    <div class="mt-4 flex text-sm leading-6 text-gray-600">
                        <InputFile class="sr-only" id="image" OnChange="OnInputFileChange" />
                        <label for="image" class="relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500">
                            <span>Upload a file</span>
                        </label>
                        <p class="pl-1">Type PNG, JPG, GIF</p>
                    </div>
                    <p class="text-xs leading-5 text-gray-600">Maximum up to 5MB</p>
                </div>
            </div>
        </div>

        <div class="mt-2 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
            <div class="relative sm:col-span-3">
                <label for="floating_productname" class="block text-sm font-medium leading-6 text-gray-900">Product Name</label>
                <InputText type="text" id="productname" @bind-Value="product.ProductName" name="floating_productname" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder=" " required />
            </div>
            <div class="relative sm:col-span-3">
                <label for="floating_namedisplay" class="block text-sm font-medium leading-6 text-gray-900">Display Name</label>
                <InputText type="text" id="namedisplay" @bind-Value="product.NameDisplay" name="floating_namedisplay" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder=" " required />
            </div>
        </div>

        <div class="mt-2 sm:col-span-3 mt-4">
            <label for="country" class="block text-sm font-medium leading-6 text-gray-900">Category</label>
            <div class="mt-2">
                <InputSelect id="categoryId" @bind-Value="product.CategoryId" name="repeat_categoryId" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    <option value="" selected>Select a category</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="mt-2 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">

            <div class="relative sm:col-span-3">
                <label for="floating_quantity" class="block text-sm font-medium leading-6 text-gray-900">Quantity</label>
                <InputNumber type="number" name="floating_quantity" id="quantity" @bind-Value="product.Quantity" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder=" " required />
            </div>
            <div class="relative sm:col-span-3">
                <label for="underline_unit" class="block text-sm font-medium leading-6 text-gray-900">Unit</label>
                <label for="underline_unit" class="sr-only">Unit select</label>
                <InputSelect id="unit" @bind-Value="product.Unit" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
                    <option selected>Choose a Unit</option>
                    <option value="1">12 Oz</option>
                    <option value="2">16 Oz</option>
                    <option value="3">gram</option>
                    <option value="4">Ml</option>
                </InputSelect>

            </div>
        </div>
        <div class="mt-2 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
            <div class="relative sm:col-span-3">
                <label for="floating_number" class="block text-sm font-medium leading-6 text-gray-900">Cost Price</label>
                <InputNumber type="number" id="costprice" @bind-Value="product.CostPrice" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder=" " required />
            </div>
            <div class="relative sm:col-span-3">
                <div class="relative sm:col-span-3">
                    <label for="floating_number" class="block text-sm font-medium leading-6 text-gray-900">Sell Price</label>
                    <InputNumber type="number" id="price" @bind-Value="product.Price" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder=" " required />
                </div>

            </div>
        </div>
        <div class="relative sm:col-span-3 gap-x-6 gap-y-8 sm:grid-cols-6">
            <label for="underline_unit" class="block text-sm font-medium leading-6 text-gray-900">Size</label>
            <label for="underline_productsize" class="sr-only">Size select</label>
            <InputSelect id="productsize" @bind-Value="product.ProductSize" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
                <option value="">---Select---</option>
                <option value="S">S</option>
                <option value="M">M</option>
                <option value="L">L</option>
            </InputSelect>
            <div class="relative sm:col-span-3">
                <label for="underline_unit" class="block text-sm font-medium leading-6 text-gray-900">Status</label>
                <label for="underline_status" class="sr-only">Status select</label>
                <InputSelect id="status" @bind-Value="product.Status" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6">
                    <option value="">---Status---</option>
                    <option value="Available">Available</option>
                    <option value="Out of Stock">Out of Stock</option>
                </InputSelect>
            </div>
        </div>
        <div class="relative sm:col-span-3 gap-x-6 gap-y-8 sm:grid-cols-6">
            <label for="floating_description" class="block text-sm font-medium leading-6 text-gray-900">Description</label>
            <div class="mt-2">
                <InputTextArea type="text" name="floating_description" id="description" @bind-Value="product.Description" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" placeholder=" " required />
            </div>
            <p class="mt-3 text-sm leading-6 text-gray-600">Write a few sentences about yourself.</p>
        </div>
        <div class="mt-6 flex items-center justify-end gap-x-6">
            <button type="button" class="text-sm font-semibold leading-6 text-gray-900" @onclick="ToggleModal">Cancel</button>
            <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Submit</button>
        </div>

    </EditForm>
}

@code {
    private Product product;
    private IEnumerable<Category> categories;

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetProduct(id);
        categories = await ProductService.GetCategories();
    }

    private async Task HandleValidSubmit()
    {
        await ProductService.UpdateProduct(product);
        Navigation.NavigateTo("/products");
    }
    private void ToggleModal()
    {
        Navigation.NavigateTo("/products");
    }
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var resizedFile = await file.RequestImageFileAsync(file.ContentType, 300, 500);
        var buffer = new byte[resizedFile.Size];
        await resizedFile.OpenReadStream().ReadAsync(buffer);
        product.Image = Convert.ToBase64String(buffer);
    }
}
