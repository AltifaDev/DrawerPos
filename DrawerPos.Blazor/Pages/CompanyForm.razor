@page "/company-form/{CompanyId:int?}"
@inject CompanyService CompanyService
@inject NavigationManager NavigationManager

 <div class="container mx-auto mt-8">
    <form @onsubmit="HandleSubmit">
        <h2 class="text-base font-semibold leading-7 text-gray-900">@(company.CompanyId == 0 ? "เพิ่ม" : "แก้ไข") ข้อมูลร้านค้า/บริษัท</h2>
        <p class="mt-1 text-sm leading-6 text-gray-600">ระบุข้อมูลสินค้าให้ครบถ้วน</p>
        <div class="col-span-full">
            <div class="mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 p-6">
                <div class="text-center">
                    @if (!string.IsNullOrEmpty(company.LogoImage))
                    {
                        <img src="@($"data:image/png;base64,{company.LogoImage}")" class="img-fluid mb-3 mx-auto h-14 w-14" alt="Product Image" />
                    }
                    else
                    {
                        <svg class="mx-auto h-12 w-12 text-gray-300" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M1.5 6a2.25 2.25 0 012.25-2.25h16.5A2.25 2.25 0 0122.5 6v12a2.25 2.25 0 01-2.25 2.25H3.75A2.25 2.25 0 011.5 18V6zM3 16.06V18c0 .414.336.75.75.75h16.5A.75.75 0 0021 18v-1.94l-2.69-2.689a1.5 1.5 0 00-2.12 0l-.88.879.97.97a.75.75 0 11-1.06 1.06l-5.16-5.159a1.5 1.5 0 00-2.12 0L3 16.061zm10.125-7.81a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0z" clip-rule="evenodd" />
                        </svg>
                    }
                    <div class="mt-4 flex text-sm leading-6 text-gray-600">
                        <InputFile class="sr-only" id="image" OnChange="OnInputFileChange" />
                        <label for="image" class="relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500">
                            <span>Upload a file</span>
                        </label>
                        <p class="pl-1">Type PNG, JPG, GIF</p>
                    </div>
                    <p class="text-xs leading-5 text-gray-600">Maximum up to 5MB</p>
                </div>
            </div>
        </div>
       <div class="mt-2 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
            <div class="relative sm:col-span-3">
                <label class="block text-sm font-medium leading-6 text-gray-900" for="companyName">ชื่อร้านค้า/บริษัท</label>
                <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="companyName" type="text" @bind="company.CompanyName" />
        </div>
            <div class="relative sm:col-span-3">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="branch">สาขา</label>
                <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="branch" type="text" @bind="company.Branch" />
        </div>
        </div>
        <div class="mt-2 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
            <div class="relative sm:col-span-3">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="branchId">รหัสสาขา</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="branchId" type="text" @bind="company.BranchId" />
        </div>
            <div class="relative sm:col-span-3">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="email">Email</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="email" type="email" @bind="company.Email" />
        </div>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="phone">Phone</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="phone" type="text" @bind="company.Phone" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="address">Address</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="address" type="text" @bind="company.Address" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="texId">Tax ID</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="texId" type="text" @bind="company.TexId" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="facebookId">Facebook ID</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="facebookId" type="text" @bind="company.Facebookid" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="lineId">Line ID</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="lineId" type="text" @bind="company.LineId" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="tiktokId">TikTok ID</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="tiktokId" type="text" @bind="company.TiktokId" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="website">Website</label>
            <input class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" id="website" type="text" @bind="company.Website" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium leading-6 text-gray-900" for="status">Status</label>
            <input type="checkbox" id="status" @bind="company.Status" />
        </div>
       
        <div class="mb-4">
            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">Save</button>
        </div>
    </form>
</div>

@code {
    [Parameter] public int? CompanyId { get; set; }
    private Company company = new Company();

    protected override async Task OnInitializedAsync()
    {
        if (CompanyId.HasValue)
        {
            company = await CompanyService.GetCompanyByIdAsync(CompanyId.Value);
        }
    }

    private async Task HandleSubmit()
    {
        if (company.CompanyId == 0)
        {
            await CompanyService.CreateCompanyAsync(company);
        }
        else
        {
            await CompanyService.UpdateCompanyAsync(company.CompanyId, company);
        }
        NavigationManager.NavigateTo("/company");
    }
    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var resizedFile = await file.RequestImageFileAsync(file.ContentType, 300, 500);
        var buffer = new byte[resizedFile.Size];
        await resizedFile.OpenReadStream().ReadAsync(buffer);
        company.LogoImage = Convert.ToBase64String(buffer);
    }
}
